{"version":3,"sources":["constants.js","components/SetupForm.js","services/eventEmitter.js","services/timers/countdownTimer.js","services/timers/complexTimer.js","components/TimerView.js","utils/formatters.js","components/ComplexTimer.js","App.js","reportWebVitals.js","index.js"],"names":["DEFAULT_TIMER_SETUP","label","initialValue","NumberInput","id","value","onChange","fullId","className","htmlFor","type","event","target","inputmode","SetupForm","onStart","useState","hangTime","setHangTime","pauseTime","setPauseTime","reps","setReps","restTime","setRestTime","sets","setSets","onSubmit","preventDefault","onReset","v","EventEmitter","this","handlers","eventName","callback","push","pos","indexOf","splice","args","forEach","cb","TIMER_EVENT_START","TIMER_EVENT_TICK","CountdownTimer","time","startTime","remaining","_running","eventEmitter","tid","setInterval","Math","max","emit","stop","clearInterval","reset","start","Events","START","END","TICK","LABEL_START","TIMER_EVENT_STATE_UPDATE","ComplexTimer","setup","events","tStart","tHang","tPause","tRest","maxReps","maxSets","state","action","nRep","nSet","_didStart","_didFinish","on","_action","_time","setState","restart","_emitState","STATE_UPDATE","TimerView","onBack","setAction","runningTime","setRunningTime","currentRep","setCurrentRep","currentSet","setCurrentSet","timer","setTimer","useEffect","t","s","toLowerCase","toFixed","isRunning","onClick","timerSetup","setTimerSetup","App","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef9e0d68.chunk.js","sourcesContent":["// Values in seconds\nexport const DEFAULT_TIMER_SETUP = {\n  hangTime: {\n    label: 'Hang Time',\n    initialValue: 7,\n  },\n  pauseTime: {\n    label: 'Pause Time',\n    initialValue: 3,\n  },\n  reps: {\n    label: 'Reps',\n    initialValue: 5,\n  },\n  restTime: {\n    label: 'Rest Time',\n    initialValue: 180,\n  },\n  sets: {\n    label: 'Sets',\n    initialValue: 6\n  },\n};\n","import { useState } from 'react';\nimport { DEFAULT_TIMER_SETUP } from '../constants';\n\nconst ID_PREFIX = 'hangtimer';\n\nconst NumberInput = ({ id, label, value, onChange }) => {\n  const fullId = `${ID_PREFIX}_${id}`\n\n  const onChangeHandler = event => onChange(event.target.value);\n\n  return (\n    <div className=\"col-lg-12\">\n      <label className=\"form-label\" htmlFor={fullId}>{label}</label>\n      <input className=\"form-control\" type=\"text\" id={fullId} value={value} onChange={onChangeHandler} inputmode=\"numeric\" />\n    </div>\n  );\n};\n\nconst SetupForm = ({ onStart }) => {\n  const [hangTime, setHangTime] = useState(DEFAULT_TIMER_SETUP.hangTime.initialValue);\n  const [pauseTime, setPauseTime] = useState(DEFAULT_TIMER_SETUP.pauseTime.initialValue);\n  const [reps, setReps] = useState(DEFAULT_TIMER_SETUP.reps.initialValue);\n  const [restTime, setRestTime] = useState(DEFAULT_TIMER_SETUP.restTime.initialValue);\n  const [sets, setSets] = useState(DEFAULT_TIMER_SETUP.sets.initialValue);\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    onStart({\n      hangTime,\n      pauseTime,\n      reps,\n      restTime,\n      sets\n    });\n  };\n\n  const resetHandler = () => {\n    setHangTime(DEFAULT_TIMER_SETUP.hangTime.initialValue);\n    setPauseTime(DEFAULT_TIMER_SETUP.pauseTime.initialValue);\n    setReps(DEFAULT_TIMER_SETUP.reps.initialValue);\n    setRestTime(DEFAULT_TIMER_SETUP.restTime.initialValue);\n    setSets(DEFAULT_TIMER_SETUP.sets.initialValue);\n  };\n  \n  return (\n    <form id=\"timerform\" className=\"row g-3\" onSubmit={submitHandler} onReset={resetHandler}>\n\n      <NumberInput\n        id=\"hang_time\"\n        label={DEFAULT_TIMER_SETUP.hangTime.label}\n        value={hangTime}\n        onChange={v => setHangTime(v)} />\n\n      <NumberInput\n        id=\"pause_time\"\n        label={DEFAULT_TIMER_SETUP.pauseTime.label}\n        value={pauseTime}\n        onChange={v => setPauseTime(v)} />\n      \n      <NumberInput\n        id=\"reps\"\n        label={DEFAULT_TIMER_SETUP.reps.label}\n        value={reps}\n        onChange={v => setReps(v)} />\n\n      <NumberInput\n        id=\"restTime\"\n        label={DEFAULT_TIMER_SETUP.restTime.label}\n        value={restTime}\n        onChange={v => setRestTime(v)} />\n\n      <NumberInput\n        id=\"reps\"\n        label={DEFAULT_TIMER_SETUP.sets.label}\n        value={sets}\n        onChange={v => setSets(v)} />\n\n      <div className=\"col-md-12\">\n        <button type=\"submit\" className=\"btn btn-primary\">Start</button>\n        <button type=\"reset\" className=\"btn btn-outline-secondary ms-3\">Reset</button>\n      </div>\n    </form>\n  );\n}\n\nexport default SetupForm;\n","export class EventEmitter {\n  constructor() {\n    this.handlers = {};\n  }\n\n  on(eventName, callback) {\n    if (eventName in this.handlers) {\n      this.handlers[eventName].push(callback);\n    } else {\n      this.handlers[eventName] = [callback];\n    }\n    return this;\n  }\n\n  off(eventName, callback) {\n    if (eventName in this.handlers) {\n      const pos = this.handlers[eventName].indexOf(callback);\n      if (pos >= 0) {\n        this.handlers[eventName].splice(pos, 1);\n      }\n    }\n    return this;\n  }\n\n  emit(eventName, ...args) {\n    if (eventName in this.handlers) {\n      this.handlers[eventName].forEach(cb => {\n        cb(...args);\n      });\n    }\n    return this;\n  }\n\n  clear(eventName) {\n    if (eventName) {\n      delete this.handlers[eventName];\n    } else {\n      this.handlers = {};\n    }\n    return this;\n  }\n}\n","import { EventEmitter } from \"../eventEmitter\";\n\nconst TIMER_EVENT_START = 'start';\nconst TIMER_EVENT_END = 'end';\nconst TIMER_EVENT_TICK = 'tick';\n\nexport class CountdownTimer {\n  constructor(time) {\n    this.startTime = time;\n    this.remaining = time;\n    this._running = false;\n\n    this.eventEmitter = new EventEmitter();\n  }\n\n  start() {\n    this.tid = setInterval(() => {\n      this.remaining = Math.max(0, this.remaining - 0.1);\n\n      // tick event\n      this.eventEmitter.emit(TIMER_EVENT_TICK);\n\n      if (this.remaining === 0) {\n        // event end\n        this.eventEmitter.emit(TIMER_EVENT_END);\n        this.stop();\n      }\n    }, 100);\n\n    this.eventEmitter.emit(TIMER_EVENT_START);\n    this._running = true;\n  }\n\n  stop() {\n    clearInterval(this.tid);\n    this._running = false;\n  }\n\n  reset() {\n    this.remaining = this.startTime;\n  }\n\n  restart() {\n    this.reset();\n    this.start();\n  }\n\n  isRunning() {\n    return this._running;\n  }\n}\n\nCountdownTimer.Events = {\n  START: TIMER_EVENT_START,\n  END: TIMER_EVENT_END,\n  TICK: TIMER_EVENT_TICK,\n};\n","import { EventEmitter } from \"../eventEmitter\";\nimport { CountdownTimer } from \"./countdownTimer\";\n\nconst START_TIMER = 2;\n\nconst LABEL_EMPTY = '-';\nconst LABEL_START = 'READY';\nconst LABEL_HANG = 'HANG';\nconst LABEL_PAUSE = 'PAUSE';\nconst LABEL_REST = 'REST';\nconst LABEL_DONE = 'DONE';\n\nconst TIMER_EVENT_ACTION = 'action';\nconst TIMER_EVENT_TIME = 'time';\nconst TIMER_EVENT_STATE_UPDATE = 'state';\n\nexport class ComplexTimer {\n  constructor(setup) {\n    this.events = new EventEmitter();\n\n    this.tStart = new CountdownTimer(START_TIMER);\n    this.tHang = new CountdownTimer(setup.hangTime);\n    this.tPause = new CountdownTimer(setup.pauseTime);\n    this.tRest = new CountdownTimer(setup.restTime);\n    this.maxReps = setup.reps;\n    this.maxSets = setup.sets;\n\n    this.state = {\n      action: LABEL_EMPTY,\n      time: setup.hangTime,\n      nRep: 1,\n      nSet: 1,\n    };\n\n    this._didStart = false;\n    this._didFinish = false;\n\n    this.events\n      .on(TIMER_EVENT_ACTION, (value) => {\n        this._action = value;\n      })\n      .on(TIMER_EVENT_TIME, value => {\n        this._time = value;\n      });\n\n    this.tStart.eventEmitter\n      .on(CountdownTimer.Events.START, () => {\n        this.setState(state => {\n          state.action = LABEL_START;\n        });\n      })\n      .on(CountdownTimer.Events.END, () => {\n        this.tHang.restart();\n      })\n      .on(CountdownTimer.Events.TICK, () => {\n        this.setState(state => {\n          state.time = this.tStart.remaining;\n        });\n      });\n    \n    this.tHang.eventEmitter\n      .on(CountdownTimer.Events.START, () => {\n        this.setState(state => {\n          state.action = LABEL_HANG;\n        });\n      })\n      .on(CountdownTimer.Events.END, () => {\n        if (this.state.nRep < this.maxReps) {\n          this.tPause.restart();\n        } else if (this.state.nSet < this.maxSets) {\n          this.tRest.restart();\n        } else {\n          this._didFinish = true;\n          this.setState(state => {\n            state.action = LABEL_DONE;\n          });\n        }\n      })\n      .on(CountdownTimer.Events.TICK, () => {\n        this.setState(state => {\n          state.time = this.tHang.remaining;\n        });\n      });\n\n    this.tPause.eventEmitter\n      .on(CountdownTimer.Events.START, () => {\n        this.setState(state => {\n          state.action = LABEL_PAUSE;\n        });\n      })\n      .on(CountdownTimer.Events.END, () => {\n        if (this.state.nRep < this.maxReps) {\n          this.setState(state => {\n            state.nRep++;\n          });\n          this.tHang.restart();\n        }\n      })\n      .on(CountdownTimer.Events.TICK, () => {\n        this.setState(state => {\n          state.time = this.tPause.remaining;\n        });\n      });\n\n    this.tRest.eventEmitter\n      .on(CountdownTimer.Events.START, () => {\n        this.setState(state => {\n          state.action = LABEL_REST;\n        });\n      })\n      .on(CountdownTimer.Events.END, () => {\n        if (this.state.nSet < this.maxSets) {\n          this.setState(state => {\n            state.nSet++;\n            state.nRep = 1;\n          });\n          this.tHang.restart();\n        }\n      })\n      .on(CountdownTimer.Events.TICK, () => {\n        this.setState(state => {\n          state.time = this.tRest.remaining;\n        });\n      });\n  }\n\n  _emitState() {\n    this.events.emit(TIMER_EVENT_STATE_UPDATE, this.state);\n  }\n\n  setState(callback) {\n    callback(this.state);\n    this._emitState(this.state);\n  }\n\n  isRunning() {\n    return this._didStart && !this._didFinish;\n  }\n\n  didFinish() {\n    return this._didFinish;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  start() {\n    this.action = LABEL_START;\n    this._didStart = true;\n    this.tStart.start();\n  }\n\n  stop() {\n    this.tStart.stop();\n    this.tHang.stop();\n    this.tPause.stop();\n    this.tRest.stop();\n  }\n\n  reset() {\n    this.stop();\n  }\n}\n\nComplexTimer.Events = {\n  STATE_UPDATE: TIMER_EVENT_STATE_UPDATE,\n};\n","import { useEffect, useState } from 'react';\nimport { formatSeconds } from '../utils/formatters';\nimport { ComplexTimer } from '../services/timers/complexTimer';\n\nimport './TimerView.css';\n\nconst TimerView = ({ setup, onBack }) => {\n  const [action, setAction] = useState('-');\n  const [runningTime, setRunningTime] = useState(setup.hangTime);\n  const [currentRep, setCurrentRep] = useState(1);\n  const [currentSet, setCurrentSet] = useState(1);\n  const [timer, setTimer] = useState(null);\n\n  useEffect(() => {\n    const t = new ComplexTimer(setup);\n\n    t.events.on(ComplexTimer.Events.STATE_UPDATE, value => {\n      setAction(value.action);\n      setRunningTime(value.time);\n      setCurrentRep(value.nRep);\n      setCurrentSet(value.nSet);\n    });\n\n    setTimer(t);\n\n    return () => {\n      t.reset();\n    };\n  }, [setup]);\n\n  const startTimer = () => {\n    timer && timer.start();\n  };\n\n  return (\n    <div className=\"row text-center timer_view\">\n      <div className={`col-12 display-1 action_text action_${action.toLowerCase()}`}>{action}</div>\n      <div className=\"col-12 display-1 my-3 action_time\">\n        {formatSeconds(runningTime)}\n      </div>\n      <div className=\"col-6\">\n        <div>REPS</div>\n        <div>{currentRep} / {setup.reps}</div>\n      </div>\n      <div className=\"col-6\">\n        <div>SETS</div>\n        <div>{currentSet} / {setup.sets}</div>\n      </div>\n\n      {timer && !timer.isRunning() &&\n      <div className=\"col-6 offset-3 mt-4\">\n        <button type=\"button\" className=\"btn btn-primary\" onClick={startTimer}>START</button>\n      </div>}\n      <div className={`col-6 offset-3 ${timer && !timer.isRunning() ? 'mt-3' : 'mt-4'}`}>\n        <button type=\"button\" className=\"btn btn-danger\" onClick={onBack}>BACK</button>\n      </div>\n    </div>\n  );\n};\n\nexport default TimerView;\n","export const formatSeconds = (s) => (+s).toFixed(1);\n","import { useState } from 'react';\nimport SetupForm from './SetupForm';\nimport TimerView from './TimerView';\n\nconst ComplexTimer = () => {\n  const [timerSetup, setTimerSetup] = useState(null);\n\n  const onStart = (setup) => setTimerSetup(setup);\n\n  const onReset = () => setTimerSetup(null);\n\n  return (\n    !timerSetup ? (\n      <SetupForm onStart={onStart} />\n    ) : (\n      <TimerView setup={timerSetup} onBack={onReset} />\n    )\n  );\n};\n\nexport default ComplexTimer;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport ComplexTimer from './components/ComplexTimer';\n\nconst APP_TITLE = 'Hangtimer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n        <div className=\"container-fluid px-3\">\n          <a href=\"/\" className=\"navbar-brand my-2 h1\">{ APP_TITLE }</a>\n        </div>\n      </nav>\n\n      <main className=\"container mt-5\">\n        <ComplexTimer />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}